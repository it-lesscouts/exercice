version: "3.9"
services:
    db_mysql:
        image: mysql
        container_name: ${DOCKER_PREFIX}_mysql_docker
        restart: always
        build: .docker/mysql
        ports:
            - "${DOCKER_MYSQL_PORT_3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: ${DOCKER_MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DOCKER_MYSQL_DATABASE}
            MYSQL_USER: ${DOCKER_MYSQL_USER}
            MYSQL_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
        networks:
            - dev

    php-apache:
        user: "0:0"
        build:
            context: .docker/php
            args:
                SERVER_NAME: ${DOCKER_APACHE_HOSTNAME}
        container_name: ${DOCKER_PREFIX}_www_docker
        ports:
            - "${DOCKER_APACHE_PORT_80}:80"
        volumes:
            - .:/var/www
        restart: always
        networks:
            - dev


###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
    dev:
        name: "dev"

volumes:
    app:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
